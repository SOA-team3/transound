.container
  .row
    .nav.nav-tabs.d-flex.justify-content-center
        a.nav-link#translationTabLink.mr-2(href="#translationTab", data-bs-toggle="tab" data-bs-target="#translationTab" class="active") Direct Translation
        a.nav-link#languageLearningTabLink(href="#languageLearningTab", data-bs-toggle="tab" data-bs-target="#languageLearningTab") Language Learning
    .tab-content
      #translationTab.tab-pane.show.active
        .row
          .left-sidebar.col-lg-3.d-flex.flex-column.align-items-center.p-3
              h3.decoration
                | Episode Information
              div.center
                img.episode.images.img-thumbnail[src=episode.images alt="#{episode.images}"]
              h5.episode.name.text-info
                = episode.name
              span.show.attribute
                | Release Date:&nbsp
                = episode.release_date
              span.show.attribute
                | Language:&nbsp
                = episode.language
              span.show.attribute
                | Podcast Length(seconds) &nbsp
                - podcast_length = (episode.podcast_length)/1000.round
                = podcast_length
              hr.thead_hr
              span.show.attribute Description &nbsp
              div
                = episode.description
              hr
              span.episode.attribute „ÄêEpisode URL„Äë&nbsp
              a.btn.btn-primary.episode.episode_url href="#{episode.episode_url}" target="_blank" style="color: white;font-size:1em" #{episode.name}
              hr
              span.episode.attribute „ÄêEpisode MP3 URL„Äë&nbsp
              a.btn.btn-primary.episode.episode_url href="#{episode.episode_mp3_url}" target="_blank" style="color: white;font-size:1em" #{episode.name}

          .right-sidebar.col-lg-5.border.border-secondary.rounded
            .scrollable-content
              h3.title_txt
                i.bi.bi-bookmarks-fill Transcript
              div.row
              .col.d-flex.align-items-center
                select#sel1.form-control.border.border-secondary name="languages"

                  / optgroup label=("European")
                  option(value="" disabled="" selected="")
                    | Select a language
                    span üîΩ
                  - lang_dict.each do |key, value|
                    option value=key
                      = key
                    span üîΩ

                span.title_txt.mr-2.ml-2
                  h6.button.btn.btn-primary#translateButton(data-lang-dict-value="#{lang_dict.to_json}")
                    | Click to Translate
                span.h2.title_txt
                  - text_loc = ".list-group.transcript-content.pt-1 div[data-new-content]"
                  button.btn.btn-link.download-btn data-toggle="tooltip" data-placement="top" title="Download" onclick="downloadText('Transcription','#{episode.name}','#{text_loc}')"
                    i.bi.bi-download

                hr
              div.list-group.transcript-content.pt-1
                div.row
                  div data-new-content="episode_transcript"
                    - sentences = JSON.parse(episode.sentence_segments)
                    - transcript = sentences.join("<br>")
                    == transcript
                    - transcript_String = transcript.gsub(/[[:punct:]\s]+/, ' ')  # filter all the punct and \n
                    - total_word_counts = transcript_String.split.size

          .right-sidebar.col-lg-4.border.border-secondary.rounded
                .scrollable-content
                  div.d-flex.justify-content-between
                    h3.title_txt
                      i.bi.bi-globe Translation
                    - text_loc = ".list-group.translate-content.pt-3 div[data-new-content]"
                    span.btn.btn.btn-link.download-btn(data-toggle="tooltip" data-placement="top" title="Download" onclick="downloadText('Translation','#{episode.name}','#{text_loc}')")
                      i.bi.bi-download
                  hr.mb-2
                  br
                  div.list-group.translate-content.pt-3
                    div.row
                      / div.col-md-9#translationContent
                      div data-new-content="episode_translation"
                        - translate_array = JSON.parse(episode.translation)
                        - translation = translate_array.join("<br>")
                        == translation

  //episode transcript & translation from DB represented by loop
  .row
    .tab-content
      #languageLearningTab.tab-pane
        .row
          .left-sidebar.col-lg-3.d-flex.flex-column.align-items-center.p-3
              h3.decoration
                | Episode Information
              div.center
                img.episode.images.img-thumbnail[src=episode.images alt="#{episode.images}"]
              h5.episode.name.text-info
                = episode.name
              span.show.attribute
                | Release Date:&nbsp
                = episode.release_date
              span.show.attribute
                | Language:&nbsp
                = episode.language
              span.show.attribute
                | Podcast Length(seconds):&nbsp
                - podcast_length = (episode.podcast_length)/1000.round
                = podcast_length
              hr
              span.show.attribute Description &nbsp
              div
                = episode.description
              hr
              span.episode.attribute „ÄêEpisode URL„Äë&nbsp
              a.btn.btn-primary.episode.episode_url href="#{episode.episode_url}" target="_blank" style="color: white;font-size:1em" #{episode.name}
              hr
              span.episode.attribute „ÄêEpisode MP3 URL„Äë&nbsp
              a.btn.btn-primary.episode.episode_url href="#{episode.episode_mp3_url}" target="_blank" style="color: white;font-size:1em" #{episode.name}

          .right-sidebar.col-lg-9.border.border-secondary.rounded
            div
              button.mb-2.btn.btn-primary.mr-2(type="button" data-bs-toggle="modal" data-bs-target="#PodcastDifficultyModal")
                        | Click to View Podcast difficulty information
              button.mb-2.btn.btn-primary(type="button" data-bs-toggle="modal" data-bs-target="#VocabDifficultyModal")
                        | Click to View Key Vocabulary
              div.d-flex
                table.table.table-bordered.mr-2
                  thead
                    tr
                      th.col-2.h5.font-weight-bold  colspan="2" Podcast Difficulty
                    tr
                      th.col-3 Score
                      th.col-3 Level
                  tbody
                    - difficulty_score = episode.difficulty_score # ÈÄôË£°ÂèØ‰ª•Ê†πÊìöÂØ¶ÈöõÊÉÖÊ≥ÅË®≠ÁΩÆ difficulty ÁöÑÂÄº ‰∏âÁ®ÆÈ°èËâ≤
                    - adjust_weight = 1.5
                    - adjusted_score = (episode.difficulty_score * adjust_weight > 100) ? 100 : (episode.difficulty_score * adjust_weight)
                    - if adjusted_score < 60
                      - difficulty = 'easy'
                    - elsif adjusted_score < 70
                      - difficulty = 'moderate'
                    - else
                      - difficulty = 'difficult'
                    tr
                      td.col-3 #{adjusted_score.round} / 100
                      td.col-3(class=difficulty)
                        span.difficulty-text.strong
                          - if difficulty == "difficult"
                            | Difficult
                          - elsif difficulty == "moderate"
                            | Moderate
                          - elsif difficulty == "easy"
                            | Easy

                table.table.table-bordered
                  thead
                    tr
                      th.col-2.h5.font-weight-bold  colspan="2" Language Learning

                    tr
                      th.col-3 Score
                      th.col-3 Grade
                  tbody
                    td.col-3.score
                        | Learning...
                    td.col-3.gpa
                        | Learning...

            hr.title_txt
            .scrollable-content
              h3.title_txt.d-flex.justify-content-around
                i.bi.bi-bookmarks-fill Transcript
                i.bi.bi-globe  Convert
                i.bi.bi-bookmarks-fill Translation
              hr.thead_hr
              div.list-group.transcript-content
                - sentences = JSON.parse(episode.sentence_segments)
                - translate_array = JSON.parse(episode.translation)
                - sentences_length = sentences.length
                - sentences.each_with_index do |sentence, line_index|
                  div.row.d-flex.align-items-center.small
                      div.small.text-gray.col-lg-5.col-sm-6.d-flex
                        div
                          | &nbsp;
                          = sentence
                          | &nbsp;
                      div.col-lg-2.col-2.button-frame.d-flex.align-items-center.justify-content-center.vcenter.border-left.border-right
                          button.btn.btn-link.pr-3.pl-3.arrow-warning(type="button" onclick="toggleSentenceTranslation(#{line_index})" data-toggle="tooltip" data-placement="top" title="Click to translate" )
                            i.bi.bi-arrow-right.arrow-hover(style="font-size: 1.5rem;")
                      div.col-lg-5.col-sm-6.text-gray(data-new-content="episode_translate_array_row" id="translation_#{line_index}" style="display:none;")
                        = translate_array[line_index]
                  hr.thead_hr
              div.d-flex.justify-content-center.mt-3
                a.pr-5.pl-5.btn.btn-outline-success.mr-2(href="#" style="font-size:1em" onclick="calculateScore(#{sentences_length})") Done
                a.pr-5.pl-5.btn.btn-outline-dark(href="#" style="font-size:1em" onclick="LearningStateReset(#{sentences_length})") Reset

#VocabDifficultyModal.modal(tabindex="-1" role="dialog" aria-labelledby="VocabDifficultyModalLabel" aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          h5.modal-title#VocabDifficultyModalLabel
            i.bi.bi-alphabet Key Vocabulary
          button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
        .modal-body
          button#toggleButton.btn-info(style="background : #17a2b8") Show / Hide Pie Chart
          .canvas-container(style="max-width: 300px; max-height: 300px; overflow: hidden; display: flex; align-items: center; justify-content: center; margin: auto")

            canvas#VocabDifficultyChart(style="max-width: 100%; max-height: 100%;display: block;")

          ul.nav.nav-tabs.justify-content-center.mb-3.mt-4
            li.nav-item.mr-1
              a.nav-link.active(href="#tab1" data-bs-toggle="tab") All
            li.nav-item.mr-1
              a.nav-link(href="#tab2" data-bs-toggle="tab") Difficult
            li.nav-item.mr-1
              a.nav-link(href="#tab3" data-bs-toggle="tab") Moderate
            li.nav-item
              a.nav-link(href="#tab4" data-bs-toggle="tab") Easy

          .tab-content
            #tab1.tab-pane.show.active
              ul(style="display: flex; flex-wrap: wrap;")
                - word_array = JSON.parse(episode.word_dict).keys
                - word_count = word_array.length
                - word_array.each_with_index do |word, index|
                  li(style="flex: 0 0 33.33%;")= "#{word}"
              | #{word_count}
            #tab2.tab-pane
              ul(style="display: flex; flex-wrap: wrap;")
                - difficult_word_array = JSON.parse(episode.difficult_words).keys
                - difficult_word_count = difficult_word_array.length
                - difficult_word_array.each_with_index do |word, index|
                  li(style="flex: 0 0 33.33%;")= "#{word}"
              | #{difficult_word_count}
            #tab3.tab-pane
              ul(style="display: flex; flex-wrap: wrap;")
                - moderate_word_array = JSON.parse(episode.moderate_words).keys
                - moderate_word_count = moderate_word_array.length
                - moderate_word_array.each_with_index do |word, index|
                  li(style="flex: 0 0 33.33%;")= "#{word}"
              | #{moderate_word_count}
            #tab4.tab-pane
              ul(style="display: flex; flex-wrap: wrap;")
                - easy_word_array = JSON.parse(episode.easy_words).keys
                - easy_word_count = easy_word_array.length
                - easy_word_array.each_with_index do |word, index|
                  li(style="flex: 0 0 33.33%;")= "#{word}"
              | #{easy_word_count}
          .modal-footer
            button.btn.btn-outline-info(type="button" data-bs-dismiss="modal") Close


#PodcastDifficultyModal.modal(tabindex="-1" role="dialog" aria-labelledby="PodcastDifficultyModalLabel" aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          h5.modal-title#PodcastDifficultyModalLabel
            i.bi.bi-alphabet Podcast Difficulty Information

          button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
        .modal-body
          .canvas-container(style="max-width: 2000px; max-height: 2000px; overflow: hidden; display: flex; align-items: center; justify-content: center; margin: auto")
            canvas#PodcastDifficultyChart(style="max-width: 100%; max-height: 100%;")


script.
  | var arrowRightClickCount = 0;
  | var translatedID = new Set();

  | function toggleSentenceTranslation(index) {
  |   var translationContent = document.getElementById('translation_' + index);
  |   translationContent.style.display = (translationContent.style.display === 'none' || translationContent.style.display === '') ? 'block' : 'block';
  |   if (translationContent.style.display === 'block' && !translatedID.has(index)){
  |     arrowRightClickCount++;
  |     translatedID.add(index);
  |     console.log('Click Rate:', arrowRightClickCount);
  |     console.log('translatedID:', Array.from(translatedID));
  |   }
  | }

  | function LearningStateReset(sentences_length) {
  |   for (var index = 0; index < sentences_length; index++){
  |     var translationContent = document.getElementById('translation_' + index);
  |     translationContent.style.display = 'none';
  |   }
  |   document.querySelector('.col-3.score').textContent = "Learning...";
  |   document.querySelector('.col-3.gpa').textContent = "Learning...";
  |   arrowRightClickCount = 0;
  |   translatedID = new Set();
  | }

  | function getGrade(score) {
  | switch (true) {
  |   case score >= 90:
  |     return 'A+';
  |   case score >= 85:
  |     return 'A';
  |   case score >= 80:
  |     return 'A-';
  |   case score >= 75:
  |     return 'B+';
  |   case score >= 70:
  |     return 'B';
  |   case score >= 65:
  |     return 'B-';
  |   case score >= 60:
  |     return 'C+';
  |   case score >= 50:
  |     return 'C';
  |   case score >= 40:
  |     return 'C-';
  |   case score >= 30:
  |     return 'D';
  |   default:
  |     return 'F';
  |   }
  | }

  | function calculateScore(sentences_length) {
  |   var newScore = 100 - ((arrowRightClickCount / sentences_length) * 100);
  |   var roundedScore = Math.round(newScore);
  |   document.querySelector('.col-3.score').textContent = roundedScore;
  |   document.querySelector('.col-3.gpa').textContent = getGrade(roundedScore);
  | }

script.
  |  document.addEventListener('DOMContentLoaded', function() {
  |    var canvas = document.getElementById('VocabDifficultyChart');
  |    var button = document.getElementById('toggleButton');
  |
  |    button.addEventListener('click', function() {
  |      if (canvas.style.display === 'none' || canvas.style.display === '') {
  |        canvas.style.display = 'block';
  |      } else {
  |        canvas.style.display = 'none';
  |      }
  |    });
  |  });

script.
  | function drawPieChart(difficultyData) {
  |   var ctx = document.getElementById('VocabDifficultyChart').getContext('2d');
  |   var DoughnutChart = new Chart(ctx, {
  |     type: 'doughnut',
  |     data: {
  |       labels: ['Difficult', 'Moderate', 'Easy'],
  |       datasets: [{
  |         data: difficultyData,
  |         backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(255, 205, 86, 0.8)', 'rgba(75, 192, 192, 0.8)'],
  |       }],
  |       },
  |     });
  |  };
  | $(document).ready(function () {
  |   var difficultyData = [#{difficult_word_count}, #{moderate_word_count}, #{easy_word_count}];
  |   drawPieChart(difficultyData);

  | });

script.
  | function drawHorizontalBarChart(difficultyData) {
  |   var ctx = document.getElementById('PodcastDifficultyChart').getContext('2d');
  |   var horizontalBarChart = new Chart(ctx, {
  |     type: 'bar',
  |     data: {
  |       labels: ['Total word counts', 'Total sentence counts', 'Words per 10 seconds', 'Words per minutes', 'Total difficult vocabularies', 'Total moderate vocabularies', 'Total easy vocabularies'],
  |       datasets: [{
  |         label: 'Horizontal Bar Chart',
  |         data: difficultyData,
  |         backgroundColor: [
  |           'rgba(255, 99, 132, 0.2)',
  |           'rgba(255, 159, 64, 0.2)',
  |           'rgba(255, 205, 86, 0.2)',
  |           'rgba(75, 192, 192, 0.2)',
  |           'rgba(54, 162, 235, 0.2)',
  |           'rgba(153, 102, 255, 0.2)',
  |           'rgba(201, 203, 207, 0.2)'
  |         ],
  |         borderColor: [
  |           'rgb(255, 99, 132)',
  |           'rgb(255, 159, 64)',
  |           'rgb(255, 205, 86)',
  |           'rgb(75, 192, 192)',
  |           'rgb(54, 162, 235)',
  |           'rgb(255, 159, 64)',
  |           'rgb(255, 205, 86)',
  |           'rgb(75, 192, 192)',
  |           'rgb(54, 162, 235)',
  |           'rgb(153, 102, 255)',
  |           'rgb(201, 203, 207)'
  |         ],
  |         borderWidth: 1
  |       }]
  |     },
  |     options: {
  |       scales: {
  |         x: {
  |           beginAtZero: true
  |         }
  |       },
  |       indexAxis: 'y'
  |     }
  |   });
  | }

  | $(document).ready(function () {
  |   var difficultyData = [#{total_word_counts},#{sentences_length},#{podcast_length},#{word_count},#{difficult_word_count},#{moderate_word_count},#{easy_word_count}];
  |   drawHorizontalBarChart(difficultyData);

  | });
